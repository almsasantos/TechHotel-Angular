{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/error/error.component.ts","./src/app/error/error.component.html","./src/app/home-view/home-view.component.ts","./src/app/home-view/home-view.component.html","./src/app/invoice-list/invoice-list.component.ts","./src/app/invoice-list/invoice-list.component.html","./src/app/invoices-view/invoices-view.component.ts","./src/app/invoices-view/invoices-view.component.html","./src/app/landing-page/landing-page.component.ts","./src/app/landing-page/landing-page.component.html","./src/app/login-view/login-view.component.ts","./src/app/login-view/login-view.component.html","./src/app/map-view/map-view.component.ts","./src/app/map-view/map-view.component.html","./src/app/massage-appointment/massage-appointment.component.ts","./src/app/massage-appointment/massage-appointment.component.html","./src/app/massage-list/massage-list.component.ts","./src/app/massage-list/massage-list.component.html","./src/app/massages-view/massages-view.component.ts","./src/app/massages-view/massages-view.component.html","./src/app/models/shared.service.ts","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/pool-rent-appointment/pool-rent-appointment.component.ts","./src/app/pool-rent-appointment/pool-rent-appointment.component.html","./src/app/pool-rent-list/pool-rent-list.component.ts","./src/app/pool-rent-list/pool-rent-list.component.html","./src/app/pool-rent-view/pool-rent-view.component.ts","./src/app/pool-rent-view/pool-rent-view.component.html","./src/app/profile-list/profile-list.component.ts","./src/app/profile-list/profile-list.component.html","./src/app/profile-view/profile-view.component.ts","./src/app/profile-view/profile-view.component.html","./src/app/registration-view-new/registration-view-new.component.ts","./src/app/registration-view-new/registration-view-new.component.html","./src/app/reservation-view-new/reservation-view-new.component.ts","./src/app/reservation-view-new/reservation-view-new.component.html","./src/app/room-food-appointment/room-food-appointment.component.ts","./src/app/room-food-appointment/room-food-appointment.component.html","./src/app/room-food-list/room-food-list.component.ts","./src/app/room-food-list/room-food-list.component.html","./src/app/room-food-view/room-food-view.component.ts","./src/app/room-food-view/room-food-view.component.html","./src/app/rooms-list/rooms-list.component.ts","./src/app/rooms-list/rooms-list.component.html","./src/app/rooms-view/rooms-view.component.ts","./src/app/rooms-view/rooms-view.component.html","./src/app/users-invoices-list/users-invoices-list.component.ts","./src/app/users-invoices-list/users-invoices-list.component.html","./src/app/users-invoices-view/users-invoices-view.component.ts","./src/app/users-invoices-view/users-invoices-view.component.html","./src/app/users-list/users-list.component.ts","./src/app/users-list/users-list.component.html","./src/app/users-view/users-view.component.ts","./src/app/users-view/users-view.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LandingPageComponent } from './landing-page/landing-page.component';\nimport { HomeViewComponent } from './home-view/home-view.component';\nimport { LoginViewComponent } from './login-view/login-view.component';\nimport { RegistrationViewNewComponent } from './registration-view-new/registration-view-new.component';\nimport { ReservationViewNewComponent } from './reservation-view-new/reservation-view-new.component';\nimport { MassagesViewComponent } from './massages-view/massages-view.component';\nimport { PoolRentViewComponent } from './pool-rent-view/pool-rent-view.component';\nimport { RoomFoodViewComponent } from './room-food-view/room-food-view.component';\nimport { InvoicesViewComponent } from './invoices-view/invoices-view.component';\nimport { ProfileViewComponent } from './profile-view/profile-view.component';\nimport { MapViewComponent } from './map-view/map-view.component';\nimport { UsersViewComponent } from './users-view/users-view.component';\nimport { RoomsViewComponent } from './rooms-view/rooms-view.component';\nimport { UsersInvoicesViewComponent } from './users-invoices-view/users-invoices-view.component';\nimport { ErrorComponent } from './error/error.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LandingPageComponent\n  },\n  {\n    path: 'home',\n    component: HomeViewComponent\n  },\n  {\n    path: 'login',\n    component: LoginViewComponent\n  },\n  {\n    path: 'registrations',\n    component: RegistrationViewNewComponent\n  },\n  {\n    path: 'reservations',\n    component: ReservationViewNewComponent\n  },\n  {\n    path: 'massages',\n    component: MassagesViewComponent\n  },\n  {\n    path: 'pool-rents',\n    component: PoolRentViewComponent\n  },\n  {\n    path: 'room-foods',\n    component: RoomFoodViewComponent\n  },\n  {\n    path: 'invoices',\n    component: InvoicesViewComponent\n  },\n  {\n    path: 'profile',\n    component: ProfileViewComponent\n  },\n  {\n    path: 'location',\n    component: MapViewComponent\n  },\n  {\n    path: 'users',\n    component: UsersViewComponent\n  },\n  {\n    path: 'rooms',\n    component: RoomsViewComponent\n  },\n  {\n    path: 'user-invoices',\n    component: UsersInvoicesViewComponent\n  },\n  {\n    path: '**',\n    component: ErrorComponent,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'tech-hotel';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatListModule} from '@angular/material/list'; \nimport {MatToolbarModule} from '@angular/material/toolbar'; \n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LandingPageComponent } from './landing-page/landing-page.component';\nimport { LoginViewComponent } from './login-view/login-view.component';\nimport { MassagesViewComponent } from './massages-view/massages-view.component';\nimport { PoolRentViewComponent } from './pool-rent-view/pool-rent-view.component';\nimport { RoomFoodViewComponent } from './room-food-view/room-food-view.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { InvoicesViewComponent } from './invoices-view/invoices-view.component';\nimport { HomeViewComponent } from './home-view/home-view.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport { RegistrationViewNewComponent } from './registration-view-new/registration-view-new.component'; \nimport { ReservationViewNewComponent } from './reservation-view-new/reservation-view-new.component';\nimport { MassageListComponent } from './massage-list/massage-list.component';\nimport { MassageAppointmentComponent } from './massage-appointment/massage-appointment.component';\nimport { PoolRentAppointmentComponent } from './pool-rent-appointment/pool-rent-appointment.component';\nimport { PoolRentListComponent } from './pool-rent-list/pool-rent-list.component';\nimport { RoomFoodListComponent } from './room-food-list/room-food-list.component';\nimport { RoomFoodAppointmentComponent } from './room-food-appointment/room-food-appointment.component';\nimport { ProfileViewComponent } from './profile-view/profile-view.component';\nimport { ErrorComponent } from './error/error.component';\nimport { MapViewComponent } from './map-view/map-view.component';\nimport { InvoiceListComponent } from './invoice-list/invoice-list.component';\nimport { ProfileListComponent } from './profile-list/profile-list.component';\nimport { UsersViewComponent } from './users-view/users-view.component';\nimport { UsersListComponent } from './users-list/users-list.component';\nimport { RoomsViewComponent } from './rooms-view/rooms-view.component';\nimport { RoomsListComponent } from './rooms-list/rooms-list.component';\nimport { UsersInvoicesViewComponent } from './users-invoices-view/users-invoices-view.component';\nimport { UsersInvoicesListComponent } from './users-invoices-list/users-invoices-list.component'; \n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LandingPageComponent,\n    LoginViewComponent,\n    MassagesViewComponent,\n    PoolRentViewComponent,\n    RoomFoodViewComponent,\n    NavbarComponent,\n    InvoicesViewComponent,\n    HomeViewComponent,\n    RegistrationViewNewComponent,\n    ReservationViewNewComponent,\n    MassageListComponent,\n    MassageAppointmentComponent,\n    PoolRentAppointmentComponent,\n    PoolRentListComponent,\n    RoomFoodListComponent,\n    RoomFoodAppointmentComponent,\n    ProfileViewComponent,\n    ErrorComponent,\n    MapViewComponent,\n    InvoiceListComponent,\n    ProfileListComponent,\n    UsersViewComponent,\n    UsersListComponent,\n    RoomsViewComponent,\n    RoomsListComponent,\n    UsersInvoicesViewComponent,\n    UsersInvoicesListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MatFormFieldModule,\n    MatStepperModule,\n    FormsModule,\n    MatSelectModule,\n    HttpClientModule,\n    MatInputModule,\n    MatTableModule,\n    MatButtonModule,\n    MatCardModule,\n    MatGridListModule,\n    MatListModule,\n    MatToolbarModule\n  ],\n  providers: [ CookieService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<a class=\"error-page\" href=\"/home\">&nbsp;</a>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-home-view',\n  templateUrl: './home-view.component.html',\n  styleUrls: ['./home-view.component.css']\n})\nexport class HomeViewComponent implements OnInit {\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: this.cookieService.get('auth'),\n    }),\n  };\n\n  constructor(\n    private http: HttpClient,\n    private formBuilder: FormBuilder,\n    private cookieService: CookieService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.http\n    .get<boolean>(\n      'https://techhotel-edge.herokuapp.com/users/login',\n      this.httpOptions\n    )\n    .subscribe((resp) => {\n      if (!resp) {\n        this.router.navigate(['/login'], { relativeTo: this.route });\n      }\n    });\n  }\n\n}\n","<app-navbar></app-navbar>\n<div class=\"home content\">\n  <div class=\"center\">\n    <h1 class=\"center-h1\">HOME</h1>\n  </div>\n\n  <div class=\"description\">\n    <mat-card\n      style=\"\n        margin: 0 -10rem;\n        text-align: center;\n        padding-top: 30px;\n        padding-bottom: 30px;\n        font-size: 20px;\n        font-family: description;\n      \"\n    >\n    Welcome to the home page of <b>TECH HOTEL</b> feel free to explore, make some reservations and to contact us any time.\n    </mat-card>\n  </div>\n\n  <mat-grid-list cols=\"2\" rowHeight=\"2:1\">\n  <mat-grid-tile>\n    <img src=\"../../assets/room.jpg\">\n  </mat-grid-tile>\n  <mat-grid-tile>\n    <img src=\"../../assets/roomservice.jpg\">\n  </mat-grid-tile>\n  <mat-grid-tile>\n    <img src=\"../../assets/pool.jpg\">\n  </mat-grid-tile>\n  <mat-grid-tile>\n    <img src=\"../../assets/massage.jpg\">\n  </mat-grid-tile>\n</mat-grid-list>\n\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Invoice } from '../models/invoice.model';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-invoice-list',\n  templateUrl: './invoice-list.component.html',\n  styleUrls: ['./invoice-list.component.css']\n})\nexport class InvoiceListComponent implements OnInit {\n  @Input()\n  invoiceList: Invoice[] = [];\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: this.cookieService.get('auth')\n    }),\n  };\n\n  displayedColumns: string[] = [\n    'invoiceId',\n    'userId',\n    'name',\n    'roomId',\n    'invoiceType',\n    'priceOwed',\n  ];\n  constructor(\n    private cookieService: CookieService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<table\n  *ngIf=\"invoiceList.length >= 1\"\n  mat-table\n  [dataSource]=\"invoiceList\"\n  matSort\n  class=\"mat-elevation-z8\"\n>\n  <ng-container matColumnDef=\"invoiceId\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> INVOICE ID.</th>\n    <td mat-cell *matCellDef=\"let invoice\">{{ invoice.invoiceId }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"userId\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>USER ID</th>\n    <td mat-cell *matCellDef=\"let invoice\">{{ invoice.userId }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>USER NAME</th>\n    <td mat-cell *matCellDef=\"let invoice\">{{ invoice.name }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"roomId\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>ROOM ID.</th>\n    <td mat-cell *matCellDef=\"let invoice\">{{ invoice.roomId }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"invoiceType\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>INVOICE TYPE</th>\n    <td mat-cell *matCellDef=\"let invoice\">{{ invoice.invoiceType }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"priceOwed\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>AMOUNT PAYED ($)</th>\n    <td mat-cell *matCellDef=\"let invoice\">{{ invoice.priceOwed }}</td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n</table>\n\n<table\n  *ngIf=\"invoiceList.length == 0\"\n  mat-table\n  [dataSource]=\"invoiceList\"\n  matSort\n  class=\"mat-elevation-z8\"\n>\n<ng-container matColumnDef=\"invoiceId\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> INVOICE ID.</th>\n    <td mat-cell *matCellDef=\"let invoice\">{{ invoice.invoiceId }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"userId\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>USER ID</th>\n    <td mat-cell *matCellDef=\"let invoice\">{{ invoice.userId }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>USER NAME</th>\n    <td mat-cell *matCellDef=\"let invoice\">{{ invoice.name }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"roomId\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>ROOM ID.</th>\n    <td mat-cell *matCellDef=\"let invoice\">{{ invoice.roomId }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"invoiceType\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>INVOICE TYPE ($)</th>\n    <td mat-cell *matCellDef=\"let invoice\">{{ invoice.invoiceType }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"priceOwed\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>AMOUNT PAYED</th>\n    <td mat-cell *matCellDef=\"let invoice\">{{ invoice.priceOwed }}</td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { Invoice } from '../models/invoice.model';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { User } from '../models/user.model';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-invoices-view',\n  templateUrl: './invoices-view.component.html',\n  styleUrls: ['./invoices-view.component.css']\n})\nexport class InvoicesViewComponent implements OnInit {\n  users: User[] = [];\n\n  todoForm: FormGroup;\n  invoiceList: Invoice[] = [];\n  isAdmin = false;\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: this.cookieService.get('auth'),\n    }),\n  };\n\n  constructor(\n    private http: HttpClient,\n    private formBuilder: FormBuilder,\n    private cookieService: CookieService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.http\n    .get<boolean>(\n      'https://techhotel-edge.herokuapp.com/users/login',\n      this.httpOptions\n    )\n    .subscribe((resp) => {\n      if (!resp) {\n        this.router.navigate(['/login'], { relativeTo: this.route });\n      }\n    });\n\n    this.http.get<boolean>('https://techhotel-edge.herokuapp.com/users/is-admin',\n    this.httpOptions).subscribe((bool) => {\n      if (!bool) {\n        this.router.navigate(['/home'], { relativeTo: this.route });\n      }\n    });\n\n    this.http\n        .get<Invoice[]>(\n          'https://techhotel-edge.herokuapp.com/invoices',\n          this.httpOptions\n        )\n        .subscribe((invoice) => {\n          this.invoiceList = invoice; console.log(invoice);\n        });\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"invoices content\">\n  <div class=\"center\">\n    <h1 class=\"center-h1\">Invoices</h1>\n  </div>\n\n  <div class=\"description\">\n    <mat-card\n      style=\"\n        margin: 0 -10rem;\n        text-align: center;\n        padding-top: 30px;\n        padding-bottom: 30px;\n        font-size: 20px;\n        font-family: description;\">\n    All emitted <b>invoices</b> from Tech Hotel are displayed down bellow.\n    </mat-card>\n  </div>\n  \n  <div class=\"child-table\">\n  <app-invoice-list [invoiceList]=\"invoiceList\"></app-invoice-list>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.css']\n})\nexport class LandingPageComponent implements OnInit {\n\n  constructor(\n    private cookieService: CookieService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    if (this.cookieService.get('auth')) {\n      this.router.navigate(['/home'], { relativeTo: this.route });\n    }\n  }\n\n}\n","<div class=\"Landing-page\">\n    <div class=\"header\">\n      <div class=\"title\">\n        <img src=\"../../assets/loguito.png\" width=\"100\"/>\n        <h1>TECH HOTEL</h1>\n      </div>\n      <div class=\"buttons\">\n        <button class=\"login btn\" routerLink=\"/location\">LOCATION</button>\n        <button class=\"login btn\" routerLink=\"/registrations\">REGISTER</button>\n        <button class=\"login btn\" routerLink=\"/login\">LOGIN</button>\n      </div>\n    </div>","import { Component, OnInit, Output, EventEmitter} from '@angular/core';\nimport { FormGroup, FormBuilder, Validators} from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { SharedService } from '../models/shared.service';\n\n@Component({\n  selector: 'app-login-view',\n  templateUrl: './login-view.component.html',\n  styleUrls: ['./login-view.component.css']\n})\n\nexport class LoginViewComponent implements OnInit {\n  loginForm: FormGroup;\n  message:string=\"\";\n  approvalText:string=\"\";\n\n\n  httpOptionsCookie = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: this.cookieService.get('auth')\n    }),\n  };\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private http: HttpClient,\n    private cookieService: CookieService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private sharedService: SharedService\n  ) { }\n\n  ngOnInit(): void {\n    this.http\n      .get<boolean>(\n        'https://techhotel-edge.herokuapp.com/users/login',\n        this.httpOptionsCookie\n      )\n      .subscribe((resp) => {\n        if (resp) {\n          this.router.navigate(['/home'], { relativeTo: this.route });\n        }\n      });\n\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n\n    this.sharedService.currentApprovalStageMessage.subscribe(msg => this.message = msg);\n  }\n\n  submitForm = () => {\n    const auth: string =\n      'Basic ' +\n      btoa(\n        this.loginForm.controls.username.value +\n          ':' +\n          this.loginForm.controls.password.value\n      );\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: auth,\n      }),\n    };\n\n    const username: string = this.loginForm.controls.username.value;\n\n    this.http\n      .get<boolean>(\n        'https://techhotel-edge.herokuapp.com/users/login',\n        httpOptions\n      )\n      .subscribe((resp) => {\n        if (resp) {\n          this.cookieService.set('auth', auth);\n          this.cookieService.set('username', username);\n\n          this.router.navigate(['/home'], { relativeTo: this.route }); }\n      else {\n          this.loginForm.controls.username.setErrors({ incorrect: true });\n          this.loginForm.controls.password.setErrors({ incorrect: true });\n        }\n      });\n\n    this.sharedService.updateApprovalMessage(this.loginForm.get('username').value);\n  }\n\n  goHome = () => this.router.navigate(['/'], { relativeTo: this.route });\n\n}\n","<div class=\"Login\">\n    <div class=\"home\" (click)=\"goHome()\">\n      <div class=\"arrow\"></div>\n      <div class=\"text-home\">BACK</div>\n    </div>\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"submitForm()\">\n      <mat-form-field>\n        <mat-label>Username</mat-label>\n        <input matInput formControlName=\"username\" placeholder=\"Username\" />\n        <mat-error>\n          Please enter a valid username\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Password</mat-label>\n        <input matInput formControlName=\"password\" type=\"password\" placeholder=\"Password\"/>\n        <mat-error>\n          Please enter a valid password\n        </mat-error>\n      </mat-form-field>\n      <button class=\"button\" type=\"submit\" [disabled]=\"loginForm.invalid\">Log in</button>\n    </form>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\n\ndeclare var ol: any;\n\n@Component({\n  selector: 'app-map-view',\n  templateUrl: './map-view.component.html',\n  styleUrls: ['./map-view.component.css']\n})\nexport class MapViewComponent implements OnInit {  \n\n  latitude: number = 40.4197278;\n  longitude: number = -3.7043952;\n\n  markerSource = new ol.source.Vector();\n\n  markerStyle = new ol.style.Style({\n  image: new ol.style.Icon(/** @type {olx.style.IconOptions} */ ({\n    anchor: [0.5, 46],\n    anchorXUnits: 'fraction',\n    anchorYUnits: 'pixels',\n    opacity: 0.75,\n    src: 'https://openlayers.org/en/v4.6.4/examples/data/icon.png'\n  }))\n});\n\n  map: any;\n  constructor(private _location: Location) { }\n\n  ngOnInit() {\n    this.map = new ol.Map({\n      target: 'map',\n      layers: [\n        new ol.layer.Tile({\n          source: new ol.source.OSM()\n        })\n      ],\n      view: new ol.View({\n        center: ol.proj.fromLonLat([this.longitude, this.latitude]),\n        zoom: 18\n      })\n    });\n    this.addMarker(this.latitude, this.longitude);\n    console.log(this.latitude, this.longitude);\n  }\n\n  setCenter() {\n    var view = this.map.getView();\n    view.setCenter(ol.proj.fromLonLat([this.longitude, this.latitude]));\n    view.addMarker(ol.proj.fromLonLat([this.longitude, this.latitude]));\n    view.setZoom(12);\n  }\n\n  addMarker(lat: number, lng: number) {\n    var vectorLayer = new ol.layer.Vector({\n      source: new ol.source.Vector({\n        features: [new ol.Feature({\n          geometry: new ol.geom.Point(ol.proj.transform([lng, lat], 'EPSG:4326', 'EPSG:3857')),\n        })]\n      }),\n      style: new ol.style.Style({\n        image: new ol.style.Icon({\n          anchor: [0.5, 0.5],\n          anchorXUnits: \"fraction\",\n          anchorYUnits: \"fraction\",\n          src: \"../assets/marker(1).png\"\n        })\n      })\n    });\n    this.map.addLayer(vectorLayer);\n    }\n\n    goBack() {\n      this._location.back();\n    }\n}\n","<div id=\"map\" class=\"map\"></div>\n<div id=\"mouse-position\"></div>\n\n<button onclick=\"addMarker(40.4175132, -3.7070558)\">add marker at 8.54, 47.37</button>\n\n<div class=\"back\" (click)=\"goBack()\">\n    <div class=\"arrow\"></div>\n    <div class=\"text-back\">BACK</div>\n  </div>","import { Component, OnInit, Output, EventEmitter, Input} from '@angular/core';\nimport { FormGroup, FormBuilder, Validators} from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Massage } from '../models/massage.model';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-massage-appointment',\n  templateUrl: './massage-appointment.component.html',\n  styleUrls: ['./massage-appointment.component.css']\n})\nexport class MassageAppointmentComponent implements OnInit {\n  @Input()\n  isAdmin = false;\n\n  @Input()\n  basicRoomIdNum: number;\n\n  @Input()\n  basicId: number;\n\n  todoForm: FormGroup;\n  successMessage = '';\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: this.cookieService.get('auth'),\n    }),\n  };\n\n  @Output() massageEmiter: EventEmitter<Massage> = new EventEmitter<Massage>();\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private http: HttpClient,\n    private cookieService: CookieService\n  ) { }\n\n  ngOnInit(): void {\n      this.todoForm = this.formBuilder.group({\n        massageType: ['', [Validators.required]]\n      });\n      this.todoForm.valueChanges.subscribe(console.log);\n  }\n\n  submitForm() {\n    if (this.basicId !== null && this.basicRoomIdNum !== null){\n      this.http\n      .post<Massage>('https://techhotel-edge.herokuapp.com/activities/massages',\n      {\n        \"userId\": this.basicId,\n        \"roomId\": this.basicRoomIdNum,\n        \"massageType\": this.todoForm.get('massageType').value\n      },\n       this.httpOptions)\n      .subscribe(massage => this.massageEmiter.emit(massage));\n\n      Object.keys(this.todoForm.controls).forEach(key => {\n      this.todoForm.get(key).setErrors(null) ;\n    });\n    }\n  }\n\n}\n","<div class=\"create-container\">\n    <form [formGroup]=\"todoForm\" (ngSubmit)=\"submitForm()\">\n      <div class=\"create-title\">MAKE MASSAGE APPOINTMENT</div>\n      <div class=\"create-fields\">\n        <div class=\"field\">\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Type Of Massage</mat-label>\n            <mat-select formControlName=\"massageType\" matNativeControl required>\n                <mat-option value=\"SWEDISH\">Swedish</mat-option>\n                <mat-option value=\"HOT_STONE\">Hot Stone</mat-option>\n                <mat-option value=\"AROMATHERAPY\">Aromatherapy</mat-option>\n                <mat-option value=\"THAI\">Thai</mat-option>\n                <mat-option value=\"COUPLES\">Couples</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n        <div class=\"buttons\">\n          <div class=\"create\">\n            <button\n              type=\"submit\"\n              mat-raised-button\n              color=\"primary\"\n              class=\"create-raised\"\n              [disabled]=\"todoForm.invalid\">\n              <h4 class=\"create-button\">APPLY</h4>\n            </button>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>","import { Component, OnInit, Input } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Massage } from '../models/massage.model';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-massage-list',\n  templateUrl: './massage-list.component.html',\n  styleUrls: ['./massage-list.component.css']\n})\nexport class MassageListComponent implements OnInit {\n  @Input()\n  massageList: Massage[] = [];\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: this.cookieService.get('auth')\n    }),\n  };\n\n  displayedColumns: string[] = [\n    'activityId',\n    'userId',\n    'roomId',\n    'totalPrice',\n    'massageType',\n    'beginOfActivity',\n    'duration',\n    'endOfActivity',\n  ];\n\n  constructor(\n    private cookieService: CookieService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<table\n  *ngIf=\"massageList.length >= 1\"\n  mat-table\n  [dataSource]=\"massageList\"\n  matSort\n  class=\"mat-elevation-z8\"\n>\n  <ng-container matColumnDef=\"activityId\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> MASSAGE ID.</th>\n    <td mat-cell *matCellDef=\"let massage\">{{ massage.activityId }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"userId\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>USER ID</th>\n    <td mat-cell *matCellDef=\"let massage\">{{ massage.userId }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"roomId\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>ROOM ID.</th>\n    <td mat-cell *matCellDef=\"let massage\">{{ massage.roomId }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"totalPrice\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>AMOUNT ($)</th>\n    <td mat-cell *matCellDef=\"let massage\">{{ massage.totalPrice[\"amount\"] }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"massageType\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>MASSAGE TYPE</th>\n    <td mat-cell *matCellDef=\"let massage\">{{ massage.massageType }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"beginOfActivity\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>BEGIN</th>\n    <td mat-cell *matCellDef=\"let massage\">{{ massage.beginOfActivity }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"duration\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>DURATION</th>\n    <td mat-cell *matCellDef=\"let massage\">{{ massage.duration }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"endOfActivity\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>END</th>\n    <td mat-cell *matCellDef=\"let massage\">{{ massage.endOfActivity }}</td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n</table>\n\n<table\n  *ngIf=\"massageList.length == 0\"\n  mat-table\n  [dataSource]=\"massageList\"\n  matSort\n  class=\"mat-elevation-z8\"\n>\n  <ng-container matColumnDef=\"activityId\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> MASSAGE ID.</th>\n  </ng-container>\n\n  <ng-container matColumnDef=\"userId\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>USER ID</th>\n  </ng-container>\n\n  <ng-container matColumnDef=\"roomId\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>ROOM ID.</th>\n  </ng-container>\n\n  <ng-container matColumnDef=\"totalPrice\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>AMOUNT ($)</th>\n  </ng-container>\n\n  <ng-container matColumnDef=\"massageType\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>MASSAGE TYPE</th>\n  </ng-container>\n\n  <ng-container matColumnDef=\"beginOfActivity\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>STARTS</th>\n  </ng-container>\n\n  <ng-container matColumnDef=\"duration\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>DURATION</th>\n  </ng-container>\n\n  <ng-container matColumnDef=\"endOfActivity\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>ENDS</th>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n</table>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { Massage } from '../models/massage.model';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { SharedService } from '../models/shared.service';\n\n@Component({\n  selector: 'app-massages-view',\n  templateUrl: './massages-view.component.html',\n  styleUrls: ['./massages-view.component.css']\n})\nexport class MassagesViewComponent implements OnInit {\n  isAdmin = false;\n  todoForm: FormGroup;\n  massageList: Massage[] = [];\n  username: string;\n  basicId: number;\n  basicRoomId: number;\n  basicRoomIdNum: number;\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: this.cookieService.get('auth'),\n    }),\n  };\n\n  constructor(\n    private http: HttpClient,\n    private formBuilder: FormBuilder,\n    private cookieService: CookieService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private sharedService: SharedService\n  ) { }\n\n  ngOnInit(): void {\n    this.http\n      .get<boolean>(\n        'https://techhotel-edge.herokuapp.com/users/login',\n        this.httpOptions\n      )\n      .subscribe((resp) => {\n        if (!resp) {\n          this.router.navigate(['/login'], { relativeTo: this.route });\n        }\n      });\n\n    this.http.get<boolean>('https://techhotel-edge.herokuapp.com/users/is-admin',\n    this.httpOptions).subscribe((bool) => (this.isAdmin = bool));\n\n    this.http\n        .get<Massage[]>(\n          'https://techhotel-edge.herokuapp.com/activities/massages',\n          this.httpOptions\n        )\n        .subscribe((massage) => {\n          this.massageList = massage; console.log(massage);\n        });\n\n    if (!this.isAdmin){\n      this.http\n        .get<any>(\n          'https://techhotel-edge.herokuapp.com/users/basics-username/' + this.cookieService.get('username'),\n          this.httpOptions\n        )\n        .subscribe((id) => {\n          this.basicId = id; console.log(this.basicId); console.log(\"number\"),\n          this.http.get<any[]>(\n            'https://techhotel-edge.herokuapp.com/activities/massages/filter/' + this.basicId,\n            this.httpOptions\n          )\n          .subscribe((massage) => {\n            this.massageList = massage; console.log(massage);\n          });\n\n          this.http.get<any>(\n            'https://techhotel-edge.herokuapp.com/users/basics/' + this.basicId, this.httpOptions\n          ).subscribe((roomId) => { this.basicRoomId = roomId; this.basicRoomIdNum = parseInt(JSON.stringify(this.basicRoomId[\"roomId\"]));\n          console.log(\"This Basic Id \" + this.basicId)});\n        });\n    }\n\n  }\n\n  submitForm() {\n    this.http\n      .post<Massage>(\n        'https://techhotel-edge.herokuapp.com/activities/massages',\n        this.todoForm.value,\n        this.httpOptions\n      )\n      .subscribe((massage) => {\n        this.massageList = [...this.massageList, massage];\n      });\n    this.todoForm.reset();\n  }\n\n\n  updateList(){\n    this.http.get<Massage[]>('https://techhotel-edge.herokuapp.com/activities/massages', this.httpOptions).subscribe(massage => {\n      this.massageList = [...massage];\n    }, () => console.log(\"updateList\"));\n  }\n\n}\n","<app-navbar></app-navbar>\n<div class=\"Massages content\">\n  <div class=\"center\">\n    <h1 class=\"center-h1\">Massages</h1>\n  </div>\n\n  <div class=\"description\">\n    <mat-card\n      style=\"\n        margin: 0 -10rem;\n        text-align: center;\n        padding-top: 30px;\n        padding-bottom: 30px;\n        font-size: 20px;\n        font-family: description;\n      \"\n    >\n     Here you can find all information about massages and make a new <b>massage appointment</b>.\n    </mat-card>\n  </div>\n\n   <div class=\"create-massage\">\n    <app-massage-appointment *ngIf=\"!isAdmin\" (massageEmiter)=\"updateList()\" [isAdmin]=\"isAdmin\" [basicRoomIdNum]=\"basicRoomIdNum\" [basicId]=\"basicId\"></app-massage-appointment>\n  </div>\n\n  \n  <div class=\"child-table\">\n  <app-massage-list [massageList]=\"massageList\"></app-massage-list>\n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n providedIn: 'root'\n})\nexport class SharedService {\n\n private approvalStageMessage = new BehaviorSubject('Basic Approval is required!');\n currentApprovalStageMessage = this.approvalStageMessage.asObservable();\n\n constructor() {\n\n }\n\n updateApprovalMessage(message: string) {\n this.approvalStageMessage.next(message);\n }\n}","import { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  isAdmin = false;\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: this.cookieService.get('auth'),\n    }),\n  };\n\n  constructor(\n    private cookieService: CookieService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private http: HttpClient\n  ) { }\n\n  ngOnInit(): void {\n    this.http.get<boolean>('https://techhotel-edge.herokuapp.com/users/is-admin',\n    this.httpOptions).subscribe((bool) => (this.isAdmin = bool));\n  }\n\n  ngAfterViewInit(): void {\n    const content = document.getElementsByClassName('content');\n    let navbar = document.getElementsByClassName('Navbar')[0] as HTMLElement;\n    let navWidth = navbar.offsetWidth + 'px';\n    \n    for (let i = 0; i < content.length; i++) {\n      const e = content[i] as HTMLElement;\n      e.style.marginLeft = navWidth;\n    }\n\n    window.addEventListener('resize', () => {\n      navbar = document.getElementsByClassName('Navbar')[0] as HTMLElement;\n      navWidth = navbar.offsetWidth + 'px';\n      for (let i = 0; i < content.length; i++) {\n        const e = content[i] as HTMLElement;\n        e.style.marginLeft = navWidth;\n      }\n    });\n  }\n\n  logout = () => {\n    this.cookieService.delete('auth');\n    this.cookieService.delete('username');\n    this.router.navigate(['/login'], { relativeTo: this.route });\n  }\n\n}\n","<div class=\"Navbar\">\n    <img src=\"../../assets/loguito.png\" class=\"logo\" routerLink=\"/home\"/>\n    <hr>\n    <ul>\n      <li *ngIf=\"!isAdmin\" routerLink=\"/reservations\">Room Reservations</li>\n      <li routerLink=\"/massages\">Massages</li>\n      <li routerLink=\"/pool-rents\">Pool Rents</li>\n      <li routerLink=\"/room-foods\">Room Food Services</li>\n      <li *ngIf=\"!isAdmin\" routerLink=\"/profile\">Profile</li>\n      <li *ngIf=\"isAdmin\" routerLink=\"/invoices\">Invoices</li>\n      <li *ngIf=\"!isAdmin\" routerLink=\"/user-invoices\">Invoices</li>\n      <li *ngIf=\"isAdmin\" routerLink=\"/users\">Users</li>\n      <li *ngIf=\"isAdmin\" routerLink=\"/rooms\">Rooms</li>\n      <li routerLink=\"/location\">Hotel's Location</li>\n    </ul>\n    <button mat-button (click)=\"logout()\">Logout</button>\n</div>","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators} from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { PoolRent } from '../models/pool-rent.model';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-pool-rent-appointment',\n  templateUrl: './pool-rent-appointment.component.html',\n  styleUrls: ['./pool-rent-appointment.component.css']\n})\nexport class PoolRentAppointmentComponent implements OnInit {\n  isAdmin = false;\n\n  @Input()\n  basicRoomIdNum: number;\n\n  @Input()\n  basicId: number;\n\n  todoForm: FormGroup;\n  successMessage = '';\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: this.cookieService.get('auth'),\n    }),\n  };\n\n  @Output() poolRentEmiter: EventEmitter<PoolRent> = new EventEmitter<PoolRent>();\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private http: HttpClient,\n    private cookieService: CookieService\n  ) { }\n\n  ngOnInit(): void {\n      this.todoForm = this.formBuilder.group({\n        floatiesNum: ['', [Validators.required, Validators.min(1)]],\n        towelNum: ['', [Validators.required, Validators.min(1)]]\n      });\n      this.todoForm.valueChanges.subscribe(console.log);\n  }\n\n  submitForm() {\n      if (this.basicId !== null && this.basicRoomIdNum !== null){\n        this.http\n        .post<PoolRent>('https://techhotel-edge.herokuapp.com/activities/pool-rents',\n        {\n          \"userId\": this.basicId,\n          \"roomId\": this.basicRoomIdNum,\n          \"floatiesNum\": this.todoForm.get('floatiesNum').value,\n          \"towelNum\": this.todoForm.get('towelNum').value,\n        },\n         this.httpOptions)\n        .subscribe(massage => this.poolRentEmiter.emit(massage));\n        Object.keys(this.todoForm.controls).forEach(key => {\n        this.todoForm.get(key).setErrors(null) ;\n      });\n    }\n  }\n\n  get userId() {\n    return this.todoForm.get('userId');\n  }\n\n  get roomId() {\n    return this.todoForm.get('roomId');\n  }\n\n}\n","<div class=\"create-container\">\n    <form [formGroup]=\"todoForm\" (ngSubmit)=\"submitForm()\">\n      <div class=\"create-title\">NEW POOL RENT</div>\n      <div class=\"create-fields\">\n        <div class=\"field\">\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Floaties</mat-label>\n            <mat-select formControlName=\"floatiesNum\" matNativeControl required>\n                <mat-option value=\"1\">1</mat-option>\n                <mat-option value=\"2\">2</mat-option>\n                <mat-option value=\"3\">3</mat-option>\n                <mat-option value=\"4\">4</mat-option>\n                <mat-option value=\"5\">5</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n        <div class=\"field\">\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Towels</mat-label>\n            <mat-select formControlName=\"towelNum\" matNativeControl required>\n                <mat-option value=\"1\">1</mat-option>\n                <mat-option value=\"2\">2</mat-option>\n                <mat-option value=\"3\">3</mat-option>\n                <mat-option value=\"4\">4</mat-option>\n                <mat-option value=\"5\">5</mat-option>\n            </mat-select>\n          </mat-form-field>\n\n        </div>\n        <div class=\"buttons\">\n          <div class=\"create\">\n            <button\n              type=\"submit\"\n              mat-raised-button\n              color=\"primary\"\n              class=\"create-raised\"\n              [disabled]=\"todoForm.invalid\">\n              <h4 class=\"create-button\">ENTER</h4>\n            </button>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>","import { Component, OnInit, Input } from '@angular/core';\nimport { PoolRent } from '../models/pool-rent.model';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-pool-rent-list',\n  templateUrl: './pool-rent-list.component.html',\n  styleUrls: ['./pool-rent-list.component.css']\n})\nexport class PoolRentListComponent implements OnInit {\n  @Input()\n  poolRentsList: PoolRent[] = [];\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: this.cookieService.get('auth')\n    }),\n  };\n\n  displayedColumns: string[] = [\n    'activityId',\n    'userId',\n    'roomId',\n    'totalPrice',\n    'floatiesNum',\n    'towelNum',\n    'beginOfActivity',\n    'duration',\n    'endOfActivity',\n  ];\n\n  constructor(\n    private cookieService: CookieService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<table\n  *ngIf=\"poolRentsList.length >= 1\"\n  mat-table\n  [dataSource]=\"poolRentsList\"\n  matSort\n  class=\"mat-elevation-z8\"\n>\n  <ng-container matColumnDef=\"activityId\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> POOL RENT ID.</th>\n    <td mat-cell *matCellDef=\"let poolRent\">{{ poolRent.activityId }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"userId\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>USER ID</th>\n    <td mat-cell *matCellDef=\"let poolRent\">{{ poolRent.userId }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"roomId\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>ROOM ID.</th>\n    <td mat-cell *matCellDef=\"let poolRent\">{{ poolRent.roomId }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"totalPrice\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>AMOUNT ($)</th>\n    <td mat-cell *matCellDef=\"let poolRent\">{{ poolRent.totalPrice[\"amount\"] }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"floatiesNum\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>FLOATIES NUM</th>\n    <td mat-cell *matCellDef=\"let poolRent\">{{ poolRent.floatiesNum }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"towelNum\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>TOWEL NUM</th>\n    <td mat-cell *matCellDef=\"let poolRent\">{{ poolRent.towelNum }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"beginOfActivity\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>BEGIN</th>\n    <td mat-cell *matCellDef=\"let poolRent\">{{ poolRent.beginOfActivity }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"duration\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>DURATION</th>\n    <td mat-cell *matCellDef=\"let poolRent\">{{ poolRent.duration }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"endOfActivity\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>END</th>\n    <td mat-cell *matCellDef=\"let poolRent\">{{ poolRent.endOfActivity }}</td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n</table>\n\n<table\n  *ngIf=\"poolRentsList.length == 0\"\n  mat-table\n  [dataSource]=\"poolRentsList\"\n  matSort\n  class=\"mat-elevation-z8\"\n>\n<ng-container matColumnDef=\"activityId\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> POOL RENT ID.</th>\n  </ng-container>\n\n  <ng-container matColumnDef=\"userId\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>USER ID</th>\n  </ng-container>\n\n  <ng-container matColumnDef=\"roomId\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>ROOM ID.</th>\n  </ng-container>\n\n  <ng-container matColumnDef=\"totalPrice\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>AMOUNT ($)</th>\n  </ng-container>\n\n  <ng-container matColumnDef=\"floatiesNum\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>FLOATIES NUM</th>\n  </ng-container>\n\n  <ng-container matColumnDef=\"towelNum\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>TOWEL NUM</th>\n  </ng-container>\n\n  <ng-container matColumnDef=\"beginOfActivity\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>BEGIN</th>\n  </ng-container>\n\n  <ng-container matColumnDef=\"duration\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>DURATION</th>\n  </ng-container>\n\n  <ng-container matColumnDef=\"endOfActivity\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>END</th>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n</table>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { PoolRent } from '../models/pool-rent.model';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { SharedService } from '../models/shared.service';\n\n@Component({\n  selector: 'app-pool-rent-view',\n  templateUrl: './pool-rent-view.component.html',\n  styleUrls: ['./pool-rent-view.component.css']\n})\n\nexport class PoolRentViewComponent implements OnInit {\n  isAdmin = false;\n  todoForm: FormGroup;\n  poolRentsList: PoolRent[] = [];\n  basicId: number;\n  basicRoomId: number;\n  basicRoomIdNum: number;\n  username:string;\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: this.cookieService.get('auth'),\n    }),\n  };\n\n  constructor(\n    private http: HttpClient,\n    private formBuilder: FormBuilder,\n    private cookieService: CookieService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private sharedService: SharedService\n  ) { }\n\n  ngOnInit(): void {\n    this.http\n    .get<boolean>(\n      'https://techhotel-edge.herokuapp.com/users/login',\n      this.httpOptions\n    )\n    .subscribe((resp) => {\n      if (!resp) {\n        this.router.navigate(['/login'], { relativeTo: this.route });\n      }\n    });\n\n    this.username = this.cookieService.get('username');\n\n    this.http.get<boolean>('https://techhotel-edge.herokuapp.com/users/is-admin',\n    this.httpOptions).subscribe((bool) => (this.isAdmin = bool));\n\n    this.http\n        .get<PoolRent[]>(\n          'https://techhotel-edge.herokuapp.com/activities/pool-rents',\n          this.httpOptions\n        )\n        .subscribe((poolRent) => {\n          this.poolRentsList = poolRent; console.log(poolRent);\n        });\n    if (!this.isAdmin){\n  this.http\n        .get<any>(\n          'https://techhotel-edge.herokuapp.com/users/basics-username/' + this.username,\n          this.httpOptions\n        )\n        .subscribe((id) => {\n          this.basicId = id; console.log(this.basicId); console.log(\"number\"), console.log(this.username),\n          this.http.get<any[]>(\n            'https://techhotel-edge.herokuapp.com/activities/pool-rents/filter/' + this.basicId,\n            this.httpOptions\n          )\n          .subscribe((poolRent) => {\n            this.poolRentsList = poolRent; console.log(poolRent);\n          });\n\n          this.http.get<any>(\n            'https://techhotel-edge.herokuapp.com/users/basics/' + this.basicId, this.httpOptions\n          ).subscribe((roomId) => { this.basicRoomId = roomId; this.basicRoomIdNum = parseInt(JSON.stringify(this.basicRoomId[\"roomId\"]));\n                                    console.log(\"This Basic Id \" + this.basicId)});\n        });\n      } \n  }\n\n  submitForm() {\n    this.http\n      .post<PoolRent>(\n        'https://techhotel-edge.herokuapp.com/activities/pool-rents',\n        this.todoForm.value,\n        this.httpOptions\n      )\n      .subscribe((poolRent) => {\n        this.poolRentsList = [...this.poolRentsList, poolRent];\n      });\n  }\n\n\n  updateList(){\n    this.http.get<PoolRent[]>('https://techhotel-edge.herokuapp.com/activities/pool-rents', this.httpOptions).subscribe(poolRent => {\n      this.poolRentsList = [...poolRent];\n    }, () => console.log(\"updateList\"));\n  }\n\n}\n","<app-navbar></app-navbar>\n<div class=\"Pool Rents content\">\n  <div class=\"center\">\n    <h1 class=\"center-h1\">POOL RENTS</h1>\n  </div>\n\n  <div class=\"description\">\n    <mat-card\n      style=\"\n        margin: 0 -10rem;\n        text-align: center;\n        padding-top: 30px;\n        padding-bottom: 30px;\n        font-size: 20px;\n        font-family: description;\n      \">\n     Here you can find all information about pool rents and make you own rent of <b>Floaties</b> and <b>Towels</b>.\n    </mat-card>\n  </div>\n\n   <div class=\"create-pool-rent\">\n    <app-pool-rent-appointment *ngIf=\"!isAdmin\" (poolRentEmiter)=\"updateList()\" [basicRoomIdNum]=\"basicRoomIdNum\" [basicId]=\"basicId\"></app-pool-rent-appointment>\n  </div>\n\n  \n  <div class=\"child-table\">\n  <app-pool-rent-list [poolRentsList]=\"poolRentsList\"></app-pool-rent-list>\n  </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { UserClient } from '../models/user-client.model';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-profile-list',\n  templateUrl: './profile-list.component.html',\n  styleUrls: ['./profile-list.component.css']\n})\nexport class ProfileListComponent implements OnInit {\n  isAdmin = false;\n  @Input()\n  profileList: any[] = [];\n\n  @Input()\n  basicUser: UserClient;\n\n  safeHtml: SafeHtml;\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: this.cookieService.get('auth')\n    }),\n  };\n\n  constructor(\n    private http: HttpClient,\n    private cookieService: CookieService,\n    private sanitizer: DomSanitizer,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.http\n    .get<boolean>(\n      'https://techhotel-edge.herokuapp.com/users/login',\n      this.httpOptions\n    )\n    .subscribe((resp) => {\n      if (!resp) {\n        this.router.navigate(['/login'], { relativeTo: this.route });\n      }\n    });\n\n    this.http.get<boolean>('https://techhotel-edge.herokuapp.com/users/is-admin',\n    this.httpOptions).subscribe((bool) => {\n      if (bool) {\n        this.router.navigate(['/home'], { relativeTo: this.route });\n      }\n    });\n    \n    this.safeHtml = this.sanitizer.bypassSecurityTrustHtml(\n      '<button>Click me</button>'\n    )\n  }\n\n}\n","\n <p>\n  <mat-toolbar color=\"primary\">\n    <mat-toolbar-row>\n      <span>ID.</span>\n      <span class=\"example-spacer\">{{basicUser.id.toString()}} </span>\n    </mat-toolbar-row>\n\n    <mat-toolbar-row>\n      <span>NAME</span>\n      <span class=\"example-spacer\"> {{basicUser.name.toString()}} </span>\n    </mat-toolbar-row>\n\n    <mat-toolbar-row>\n      <span>USERNAME</span>\n      <span class=\"example-spacer\"> {{basicUser.username.toString()}}  </span>\n    </mat-toolbar-row>\n\n    <mat-toolbar-row>\n      <span>TYPE OF USER</span>\n      <span class=\"example-spacer\"> {{basicUser.typeOfUser.toString()}} </span>\n    </mat-toolbar-row>\n\n    <mat-toolbar-row>\n      <span>EMAIL</span>\n      <span class=\"example-spacer\"> {{basicUser.email.toString()}} </span>\n    </mat-toolbar-row>\n\n    <mat-toolbar-row>\n      <span>BIRTH DATE</span>\n      <span class=\"example-spacer\"> {{basicUser.birthDate.toString()}} </span>\n    </mat-toolbar-row>\n\n    <mat-toolbar-row>\n      <span>COUNTRY</span>\n      <span class=\"example-spacer\"> {{basicUser.address['country'].toString()}} </span>\n    </mat-toolbar-row>\n\n    <mat-toolbar-row>\n      <span>CITY</span>\n      <span class=\"example-spacer\"> {{basicUser.address['city'].toString()}} </span>\n    </mat-toolbar-row>\n\n    <mat-toolbar-row>\n      <span>STREET</span>\n      <span class=\"example-spacer\"> {{basicUser.address['street'].toString()}} </span>\n    </mat-toolbar-row>\n\n    <mat-toolbar-row>\n      <span>POSTAL CODE</span>\n      <span class=\"example-spacer\"> {{basicUser.address['postalCode'].toString()}} </span>\n    </mat-toolbar-row>\n\n    <mat-toolbar-row>\n      <span>REGISTRATION DATE</span>\n      <span class=\"example-spacer\">{{basicUser.registrationDate.toString()}} </span>\n    </mat-toolbar-row>\n\n    <mat-toolbar-row>\n      <span>NUMBER OF STAYS</span>\n      <span class=\"example-spacer\"> {{basicUser.numberOfStays.toString()}} </span>\n    </mat-toolbar-row>\n\n    <mat-toolbar-row>\n      <span>ROOM ID</span>\n      <span class=\"example-spacer\"> {{basicUser.roomId.toString()}} </span>\n    </mat-toolbar-row>\n  </mat-toolbar>\n</p>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { SharedService } from '../models/shared.service';\nimport { UserClient } from '../models/user-client.model';\n\n@Component({\n  selector: 'app-profile-view',\n  templateUrl: './profile-view.component.html',\n  styleUrls: ['./profile-view.component.css']\n})\nexport class ProfileViewComponent implements OnInit {\n  basicId: number;\n  basicUser: UserClient;\n  username: string;\n\n  todoForm: FormGroup;\n  poolRentsList: any[] = [];\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: this.cookieService.get('auth'),\n    }),\n  };\n\n  constructor(\n    private http: HttpClient,\n    private formBuilder: FormBuilder,\n    private cookieService: CookieService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private sharedService: SharedService\n  ) { }\n\n\n  ngOnInit(): void {\n    this.http\n    .get<boolean>(\n      'https://techhotel-edge.herokuapp.com/users/login',\n      this.httpOptions\n    )\n    .subscribe((resp) => {\n      if (!resp) {\n        this.router.navigate(['/login'], { relativeTo: this.route });\n      }\n    });\n\n    this.username = this.cookieService.get('username');\n    console.log(\"hola\")\n    console.log(this.username);\n\n    this.http\n        .get<number>(\n          'https://techhotel-edge.herokuapp.com/users/basics-username/' + this.username,\n          this.httpOptions\n        )\n        .subscribe((user) => {\n          this.basicId = user; console.log(this.basicId);\n          this.http.get<UserClient>(\n            'https://techhotel-edge.herokuapp.com/users/basics/' + this.basicId,\n            this.httpOptions\n          )\n          .subscribe((newUser) => {\n            this.basicUser = newUser; console.log(newUser);\n          }); });\n        }\n\n\n}\n","<app-navbar></app-navbar>\n<div class=\"profile content\">\n  <div class=\"center\">\n    <h1 class=\"center-h1\">PROFILE {{ this.username }}</h1>\n  </div>\n\n  <div class=\"description\">\n    <mat-card\n      style=\"\n        margin: 0 -10rem;\n        text-align: center;\n        padding-top: 30px;\n        padding-bottom: 30px;\n        font-size: 20px;\n        font-family: description;\">\n    <p> Hi there! Thank you for joying our crew. Our team hopes you'll have an awesome and enjoyable stay.</p>\n         <hr>\n         <p>Don't forget to check our services.</p>\n    </mat-card>\n  </div>\n  \n  <app-profile-list [basicUser]=\"basicUser\"></app-profile-list>\n  \n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { UserClient } from '../models/user-client.model';\nimport { Location } from '@angular/common';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-registration-view-new',\n  templateUrl: './registration-view-new.component.html',\n  styleUrls: ['./registration-view-new.component.css']\n})\n\nexport class RegistrationViewNewComponent implements OnInit {\n  noPremium = true;\n  todoForm: FormGroup;\n  postObject;\n  successMessage = '';\n\n  constructor(\n    private http: HttpClient,\n    private formBuilder: FormBuilder,\n    private _location: Location,\n    ) { }\n\n  ngOnInit(): void {\n\n    this.todoForm = this.formBuilder.group({\n      name: ['', [Validators.required, Validators.pattern('^[a-zA-Z]+\\\\s[a-zA-Z]+$')]],\n      username: ['', [Validators.required, Validators.minLength(4), Validators.pattern('^[a-zA-Z]+')]],\n      password: ['', [Validators.required, Validators.minLength(4)]],\n      phoneNumber: ['', [Validators.required, Validators.pattern('^[0-9]{9}$')]],\n      email: ['', [Validators.required, Validators.pattern(/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/gm)]],\n      birthDate: ['', [Validators.required, Validators.pattern(/^([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))/)]],\n      country: ['', [Validators.required, Validators.minLength(2), Validators.pattern('^[A-z]+$')]],\n      city: ['', [Validators.required, Validators.minLength(2), Validators.pattern('^[A-z]+$')]],\n      street: ['', [Validators.required, Validators.minLength(5)]],\n      postalCode: ['', [Validators.required, Validators.minLength(2), Validators.pattern('^[0-9]+')]],\n      balance: ['', [Validators.required, Validators.minLength(1), Validators.pattern('^[0-9]+')]],\n      type: ['Basic', Validators.required]\n    });\n\n    this.todoForm.valueChanges.subscribe(console.log);\n  }\n\n  submitForm(){\n    const type: string = this.todoForm.get('type').value;\n    if (type === 'Basic'){\n      this.http.post<UserClient>('https://techhotel-edge.herokuapp.com/users/basics', this.todoForm.value)\n      .subscribe(user => this.successMessage = 'Basic User created');\n    } else if (type === 'Premium') {\n      this.http.post<UserClient>('https://techhotel-edge.herokuapp.com/users/premiums', this.todoForm.value)\n      .subscribe(user => this.successMessage = 'Premium User created');\n    }\n    this.todoForm.reset();\n    Object.keys(this.todoForm.controls).forEach(key => {\n      this.todoForm.get(key).setErrors(null);\n    });\n  }\n\n  goBack() {\n    this._location.back();\n  }\n\n  get name() {\n    return this.todoForm.get('name');\n  }\n\n  get username() {\n    return this.todoForm.get('username');\n  }\n\n  get password() {\n    return this.todoForm.get('password');\n  }\n\n  get phoneNumber() {\n    return this.todoForm.get('phoneNumber');\n  }\n\n  get email() {\n    return this.todoForm.get('email');\n  }\n\n  get birthDate() {\n    return this.todoForm.get('birthDate');\n  }\n\n  get country() {\n    return this.todoForm.get('country');\n  }\n\n  get city() {\n    return this.todoForm.get('city');\n  }\n\n  get street() {\n    return this.todoForm.get('street');\n  }\n\n  get postalCode() {\n    return this.todoForm.get('postalCode');\n  }\n\n  get balance() {\n    return this.todoForm.get('balance');\n  }\n\n  get type() {\n    return this.todoForm.get('type');\n  }\n}\n","<div class=\"registration\">\n    <div class=\"center\">\n        <h1 class=\"center-h1\">Registration</h1>\n    </div>\n\n<div class=\"parent\">\n<form [formGroup]=\"todoForm\" (ngSubmit)=\"submitForm()\" class=\"example-form\">\n    <mat-form-field class=\"newLine\" class=\"example-full-width\">\n        <mat-label>Name: </mat-label>\n        <input matInput placeholder=\"First and Last Name\" formControlName=\"name\">\n        <mat-error *ngIf=\"name.invalid\">\n            Please insert both first and last names\n        </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"newLine\">\n        <mat-label>Username: </mat-label>\n        <input matInput placeholder=\"Username\" formControlName=\"username\">\n        <mat-error *ngIf=\"username.invalid\">\n            Please insert a valid username\n        </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"newLine\">\n        <mat-label>Password: </mat-label>\n        <input matInput type=\"password\" placeholder=\"Password\" formControlName=\"password\">\n        <mat-error *ngIf=\"password.invalid\">\n            Please insert a valid password\n        </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"newLine\">\n        <mat-label>PhoneNumber: </mat-label>\n        <input matInput placeholder=\"PhoneNumber\" formControlName=\"phoneNumber\">\n        <mat-error *ngIf=\"phoneNumber.invalid\">\n            Please insert a valid phone number\n        </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"newLine\">\n        <mat-label>Email: </mat-label>\n        <input matInput placeholder=\"Email\" formControlName=\"email\">\n        <mat-error *ngIf=\"email.invalid\">\n            Please insert a valid email\n        </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"newLine\">\n        <mat-label>Birth Date: </mat-label>\n        <input matInput placeholder=\"YYYY-MM-DD\" formControlName=\"birthDate\">\n        <mat-error *ngIf=\"birthDate.invalid\">\n            Please insert your birth date\n        </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"newLine\">\n        <mat-label>Country: </mat-label>\n        <input matInput placeholder=\"Country\" formControlName=\"country\">\n        <mat-error *ngIf=\"country.invalid\">\n            Please insert a valid country\n        </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"newLine\">\n        <mat-label>City: </mat-label>\n        <input matInput placeholder=\"City\" formControlName=\"city\">\n        <mat-error *ngIf=\"city.invalid\">\n            Please insert a valid city\n        </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"newLine\">\n        <mat-label>Street: </mat-label>\n        <input matInput placeholder=\"Street\" formControlName=\"street\">\n        <mat-error *ngIf=\"street.invalid\">\n            Please insert a valid street\n        </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"newLine\">\n        <mat-label>Postal Code: </mat-label>\n        <input matInput placeholder=\"Postal Code\" formControlName=\"postalCode\">\n        <mat-error *ngIf=\"postalCode.invalid\">\n            Please insert a valid postal code\n        </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"newLine\">\n        <mat-label>Balance: </mat-label>\n        <input matInput type=\"password\"  matInput placeholder=\"Balance\" formControlName=\"balance\">\n        <mat-error *ngIf=\"balance.invalid\">\n            Please insert a valid balance\n        </mat-error>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Type Of User</mat-label>\n        <mat-select formControlName=\"type\" matNativeControl required>\n            <mat-option value=\"Basic\">Basic</mat-option>\n            <mat-option  [disabled]=\"noPremium\" value=\"Premium\">Premium</mat-option>\n        </mat-select>\n        <mat-error *ngIf=\"type.invalid\">\n            Please choose a type of user\n        </mat-error>\n      </mat-form-field>\n\n      <div class=\"buttons\">\n        <div class=\"create\">\n          <button\n            type=\"submit\"\n            mat-raised-button\n            color=\"primary\"\n            class=\"create-raised\"\n            [disabled]=\"todoForm.invalid\">\n            <h4 class=\"create-button\">REGISTER</h4>\n          </button>\n        </div>\n      </div>\n\n        <div class=\"back\" (click)=\"goBack()\">\n            <div class=\"arrow\"></div>\n            <div class=\"text-back\">BACK</div>\n          </div>\n</form>\n\n</div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { RoomReservation } from '../models/room-reservation.model';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { SharedService } from '../models/shared.service';\nimport { UserClient } from '../models/user-client.model';\n\n@Component({\n  selector: 'app-reservation-view-new',\n  templateUrl: './reservation-view-new.component.html',\n  styleUrls: ['./reservation-view-new.component.css']\n})\nexport class ReservationViewNewComponent implements OnInit {\n  \n  todoForm: FormGroup;\n  successMessage = '';\n  message: string;\n  basicId: number;\n  basicRoomId: number;\n  basicUser: UserClient;\n  roomIdPost: string;\n  isTypeRoom = false;\n  regularRoom = \"REGULAR_ROOM\";\n  suiteRoom = \"SUITE_ROOM\";\n  username: string;\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: this.cookieService.get('auth'),\n    }),\n  };\n\n  constructor(\n    private http: HttpClient,\n    private cookieService: CookieService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute,\n    private sharedService: SharedService\n  ) { }\n\n  ngOnInit(): void {\n    this.http\n    .get<boolean>(\n      'https://techhotel-edge.herokuapp.com/users/login',\n      this.httpOptions\n    )\n    .subscribe((resp) => {\n      if (!resp) {\n        this.router.navigate(['/login'], { relativeTo: this.route });\n      }\n    });\n\n    this.http.get<boolean>('https://techhotel-edge.herokuapp.com/users/is-admin',\n    this.httpOptions).subscribe((bool) => {\n      if (bool) {\n        this.router.navigate(['/home'], { relativeTo: this.route });\n      }\n    });\n\n    this.username = this.cookieService.get('username');\n    this.http\n    .get<any>(\n      'https://techhotel-edge.herokuapp.com/users/basics-username/' + this.username,\n      this.httpOptions\n    )\n    .subscribe((id) => {\n      this.basicId = id; console.log(this.basicId); console.log(\"number\"), console.log(this.username),\n      this.http.get<UserClient>(\n        'https://techhotel-edge.herokuapp.com/users/basics/' + this.basicId,\n        this.httpOptions\n      )\n      .subscribe((user) => {\n        this.basicUser = user; console.log(user);\n      });\n    });\n\n    this.todoForm = this.formBuilder.group({\n      roomId: ['', [Validators.required, Validators.minLength(1), Validators.pattern('^[0-9]+')]],\n      numberOfNights: ['', [Validators.required, Validators.minLength(1), Validators.pattern('^[0-9]+')]],\n      roomType: ['', Validators.required]\n    });\n\n    this.todoForm.valueChanges.subscribe(console.log);\n  }\n\n  submitForm(){\n    const newType: string = this.todoForm.get('roomType').value;\n\n    if (newType === 'REGULAR_ROOM'){\n      this.http.post<RoomReservation>('https://techhotel-edge.herokuapp.com/reservations/rooms',\n      {\n        \"userId\": this.basicId,\n        \"userName\": this.basicUser.name,\n        \"roomId\": parseInt(this.todoForm.get('roomId').value),\n        \"numberOfNights\": this.todoForm.get('numberOfNights').value,\n        \"roomType\": this.todoForm.get('roomType').value\n\n      }\n      , this.httpOptions)\n      .subscribe((reservation) => {this.successMessage = 'Regular Room Reservation created'; this.roomIdPost = this.todoForm.get('roomId').value });\n    }\n    \n    if (newType === 'SUITE_ROOM') {\n      this.http.post<RoomReservation>('https://techhotel-edge.herokuapp.com/reservations/rooms', \n      {\n        \"userId\": this.basicId,\n        \"userName\": this.basicUser.name,\n        \"roomId\": parseInt(this.todoForm.get('roomId').value),\n        \"numberOfNights\": this.todoForm.get('numberOfNights').value,\n        \"roomType\": this.todoForm.get('roomType').value\n\n      }\n      , this.httpOptions)\n      .subscribe(reservation => this.successMessage = 'Suite Room Reservation created');\n    }\n\n    this.todoForm.reset();\n    Object.keys(this.todoForm.controls).forEach(key => {\n      this.todoForm.get(key).setErrors(null);\n    });\n  }\n\n  get userId() {\n    return this.todoForm.get('userId');\n  }\n\n  get name() {\n    return this.todoForm.get('name');\n  }\n\n  get roomId() {\n    return this.todoForm.get('roomId');\n  }\n\n  get numberOfNights() {\n    return this.todoForm.get('numberOfNights');\n  }\n\n  get roomType() {\n    return this.todoForm.get('roomType');\n  }\n\n}\n","<app-navbar></app-navbar>\n\n<div class=\"Reservation content\">\n    <div class=\"center\">\n        <h1 class=\"center-h1\">Rooms Reservations</h1>\n    </div>\n\n    <div class=\"register_information\">\n        <mat-card style=\"\n        margin: 0 -10rem;\n        text-align: center;\n        padding-top: 30px;\n        padding-bottom: 30px;\n        font-size: 20px;\n        font-family: description;\">\n    Our hotel displays to all our customer a total of 15 regular rooms and 5 suites, make a reservation down below.\n    </mat-card>\n    </div>\n\n<div *ngIf=\"basicUser.roomId===null || basicUser.roomId===0\" class=\"parent\">\n<form [formGroup]=\"todoForm\" (ngSubmit)=\"submitForm()\" class=\"example-form\">\n\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Type Of Room</mat-label>\n        <mat-select formControlName=\"roomType\" matNativeControl required>\n            <mat-option value=\"REGULAR_ROOM\">Regular Room</mat-option>\n            <mat-option value=\"SUITE_ROOM\">Suite Room</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Room Number</mat-label>\n        <mat-select [disabled]=\"roomType.invalid\" formControlName=\"roomId\" matNativeControl required>\n            <mat-option *ngIf=\"this.todoForm.get('roomType').value===this.regularRoom\" value=\"1\">Room 1</mat-option>\n            <mat-option *ngIf=\"this.todoForm.get('roomType').value===this.regularRoom\" value=\"2\">Room 2</mat-option>\n            <mat-option *ngIf=\"this.todoForm.get('roomType').value===this.regularRoom\" value=\"3\">Room 3</mat-option>\n            <mat-option *ngIf=\"this.todoForm.get('roomType').value===this.regularRoom\" value=\"4\">Room 4</mat-option>\n            <mat-option *ngIf=\"this.todoForm.get('roomType').value===this.regularRoom\" value=\"5\">Room 5</mat-option>\n            <mat-option *ngIf=\"this.todoForm.get('roomType').value===this.regularRoom\" value=\"6\">Room 6</mat-option>\n            <mat-option *ngIf=\"this.todoForm.get('roomType').value===this.regularRoom\" value=\"7\">Room 7</mat-option>\n            <mat-option *ngIf=\"this.todoForm.get('roomType').value===this.regularRoom\" value=\"8\">Room 8</mat-option>\n            <mat-option *ngIf=\"this.todoForm.get('roomType').value===this.regularRoom\" value=\"9\">Room 9</mat-option>\n            <mat-option *ngIf=\"this.todoForm.get('roomType').value===this.regularRoom\" value=\"10\">Room 10</mat-option>\n            <mat-option *ngIf=\"this.todoForm.get('roomType').value===this.regularRoom\" value=\"11\">Room 11</mat-option>\n            <mat-option *ngIf=\"this.todoForm.get('roomType').value===this.regularRoom\" value=\"12\">Room 12</mat-option>\n            <mat-option *ngIf=\"this.todoForm.get('roomType').value===this.regularRoom\" value=\"13\">Room 13</mat-option>\n            <mat-option *ngIf=\"this.todoForm.get('roomType').value===this.regularRoom\" value=\"14\">Room 14</mat-option>\n            <mat-option *ngIf=\"this.todoForm.get('roomType').value===this.regularRoom\" value=\"15\">Room 15</mat-option>\n            <mat-option *ngIf=\"this.todoForm.get('roomType').value===this.suiteRoom\" value=\"16\">Room 16</mat-option>\n            <mat-option *ngIf=\"this.todoForm.get('roomType').value===this.suiteRoom\" value=\"17\">Room 17</mat-option>\n            <mat-option *ngIf=\"this.todoForm.get('roomType').value===this.suiteRoom\" value=\"18\">Room 18</mat-option>\n            <mat-option *ngIf=\"this.todoForm.get('roomType').value===this.suiteRoom\" value=\"19\">Room 19</mat-option>\n            <mat-option *ngIf=\"this.todoForm.get('roomType').value===this.suiteRoom\" value=\"20\">Room 20</mat-option>\n        </mat-select>\n        <mat-error *ngIf=\"roomId.invalid\">\n            Please choose a room\n        </mat-error>\n      </mat-form-field>\n\n    <mat-form-field class=\"newLine\">\n        <mat-label>Number Of Nights: </mat-label>\n        <input matInput placeholder=\"Insert number of nights\" formControlName=\"numberOfNights\">\n        <mat-error *ngIf=\"numberOfNights.invalid\">\n            Please insert a valid number\n        </mat-error>\n    </mat-form-field>\n    \n    <div class=\"buttons\">\n        <div class=\"create\">\n          <button\n            type=\"submit\"\n            mat-raised-button\n            color=\"primary\"\n            class=\"create-raised\"\n            [disabled]=\"todoForm.invalid\">\n            <h4 class=\"create-button\">APPLY</h4>\n          </button>\n        </div>\n      </div>\n\n</form>\n\n</div>\n<div  *ngIf=\"basicUser.roomId!==null || basicUser.roomId!==0\" class=\"gif\">\n    <img src=\"../../assets/welcome2.gif\">\n</div>\n\n</div>","import { Component, OnInit, Output, EventEmitter, Input} from '@angular/core';\nimport { FormGroup, FormBuilder, Validators} from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { RoomFood } from '../models/room-food.model';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-room-food-appointment',\n  templateUrl: './room-food-appointment.component.html',\n  styleUrls: ['./room-food-appointment.component.css']\n})\nexport class RoomFoodAppointmentComponent implements OnInit {\n  isAdmin = false;\n\n  todoForm: FormGroup;\n  successMessage = '';\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: this.cookieService.get('auth'),\n    }),\n  };\n\n  @Output() roomFoodEmiter: EventEmitter<RoomFood> = new EventEmitter<RoomFood>();\n  @Input()\n  basicRoomIdNum: number;\n\n  @Input()\n  basicId: number;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private cookieService: CookieService,\n    private http: HttpClient,\n    private router: Router,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n      this.todoForm = this.formBuilder.group({\n        foodMenu: ['', [Validators.required]],\n        drinkMenu: ['', [Validators.required]]\n      });\n  }\n\n  submitForm() {\n      if (this.basicId !== null && this.basicRoomIdNum !== null){\n        this.http\n        .post<RoomFood>('https://techhotel-edge.herokuapp.com/activities/room-food-services',\n        {\n        'userId': this.basicId,\n        'roomId': this.basicRoomIdNum,\n        'foodMenu': this.todoForm.get('foodMenu').value,\n        'drinkMenu': this.todoForm.get('drinkMenu').value,\n        },\n        this.httpOptions)\n        .subscribe(roomFood => this.roomFoodEmiter.emit(roomFood));\n\n        Object.keys(this.todoForm.controls).forEach(key => {\n        this.todoForm.get(key).setErrors(null) ;\n        });\n        }\n  }\n\n  get userId() {\n    return this.todoForm.get('userId');\n  }\n\n  get roomId() {\n    return this.todoForm.get('roomId');\n  }\n\n}\n","<div class=\"create-container\">\n    <form [formGroup]=\"todoForm\" (ngSubmit)=\"submitForm()\">\n      <div class=\"create-title\">ROOM FOOD REQUEST</div>\n      <div class=\"create-fields\">\n        <div class=\"field\">\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Plate</mat-label>\n            <mat-select formControlName=\"foodMenu\" matNativeControl required>\n                <mat-option value=\"STEAK_GRILLED\">Steak Grilled</mat-option>\n                <mat-option value=\"FRESH_SALMON\">Fresh Salmon</mat-option>\n                <mat-option value=\"BEEF_STROGANOFF\">Beef Stroganoff</mat-option>\n                <mat-option value=\"PIZZA_MARGARITA\">Pizza Margarita</mat-option>\n                <mat-option value=\"HOMEMADE_VEGGIE_SOUP\">Homemade Veggie Soup</mat-option>\n                <mat-option value=\"VEGETARIAN_BURGER\">Vegetarian Burguer</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n          <div class=\"field\">\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Drink</mat-label>\n            <mat-select formControlName=\"drinkMenu\">\n                <mat-option value=\"BOTTLE_OF_WATER\">Water Bottle</mat-option>\n                <mat-option value=\"CAPPUCCINO\">Capuccino</mat-option>\n                <mat-option value=\"COFFEE\">Coffee</mat-option>\n                <mat-option value=\"TEA\">Tea</mat-option>\n                <mat-option value=\"BEER\">Beer</mat-option>\n                <mat-option value=\"COCKTAIL\">Cocktail</mat-option>\n                <mat-option value=\"GLASS_RED_WINE\">Glass of Red Wine</mat-option>\n                <mat-option value=\"GLASS_GREEN_WINE\">Glass of Green Wine</mat-option>\n            </mat-select>\n          </mat-form-field>\n          </div>\n        </div>\n        <div class=\"buttons\">\n          <div class=\"create\">\n            <button\n              type=\"submit\"\n              mat-raised-button\n              color=\"primary\"\n              class=\"create-raised\"\n              [disabled]=\"todoForm.invalid\">\n              <h4 class=\"create-button\">ENTER</h4>\n            </button>\n          </div>\n        </div>\n    </form>\n  </div>","import { Component, OnInit, Input } from '@angular/core';\nimport { RoomFood } from '../models/room-food.model';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-room-food-list',\n  templateUrl: './room-food-list.component.html',\n  styleUrls: ['./room-food-list.component.css']\n})\nexport class RoomFoodListComponent implements OnInit {\n  @Input()\n  roomFoodsList: RoomFood[] = [];\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: this.cookieService.get('auth')\n    }),\n  };\n\n  displayedColumns: string[] = [\n    'activityId',\n    'userId',\n    'roomId',\n    'totalPrice',\n    'foodMenu',\n    'drinkMenu',\n    'delivered',\n  ];\n\n  constructor(\n    private cookieService: CookieService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<table\n  *ngIf=\"roomFoodsList.length >= 1\"\n  mat-table\n  [dataSource]=\"roomFoodsList\"\n  matSort\n  class=\"mat-elevation-z8\"\n>\n  <ng-container matColumnDef=\"activityId\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> ROOM SERVICE ID.</th>\n    <td mat-cell *matCellDef=\"let roomFood\">{{ roomFood.activityId }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"userId\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>USER ID</th>\n    <td mat-cell *matCellDef=\"let roomFood\">{{ roomFood.userId }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"roomId\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>ROOM ID.</th>\n    <td mat-cell *matCellDef=\"let roomFood\">{{ roomFood.roomId }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"totalPrice\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>AMOUNT ($)</th>\n    <td mat-cell *matCellDef=\"let roomFood\">{{ roomFood.totalPrice[\"amount\"] }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"foodMenu\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>FOOD MENU</th>\n    <td mat-cell *matCellDef=\"let roomFood\">{{ roomFood.foodMenu }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"drinkMenu\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>DRINK MENU</th>\n    <td mat-cell *matCellDef=\"let roomFood\">{{ roomFood.drinkMenu }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"delivered\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>DELIVERED</th>\n    <td mat-cell *matCellDef=\"let roomFood\">{{ roomFood.delivered }}</td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n</table>\n\n<table\n  *ngIf=\"roomFoodsList.length == 0\"\n  mat-table\n  [dataSource]=\"roomFoodsList\"\n  matSort\n  class=\"mat-elevation-z8\"\n>  \n<ng-container matColumnDef=\"activityId\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> ROOM SERVICE ID.</th>\n  </ng-container>\n\n  <ng-container matColumnDef=\"userId\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>USER ID</th>\n  </ng-container>\n\n  <ng-container matColumnDef=\"roomId\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>ROOM ID.</th>\n  </ng-container>\n\n  <ng-container matColumnDef=\"totalPrice\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>AMOUNT ($)</th>\n  </ng-container>\n\n  <ng-container matColumnDef=\"foodMenu\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>FOOD MENU</th>\n  </ng-container>\n\n  <ng-container matColumnDef=\"drinkMenu\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>DRINK MENU</th>\n  </ng-container>\n\n  <ng-container matColumnDef=\"delivered\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>DELIVERED</th>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n</table>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { RoomFood } from '../models/room-food.model';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { SharedService } from '../models/shared.service';\n\n@Component({\n  selector: 'app-room-food-view',\n  templateUrl: './room-food-view.component.html',\n  styleUrls: ['./room-food-view.component.css']\n})\nexport class RoomFoodViewComponent implements OnInit {\n  isAdmin = false;\n  todoForm: FormGroup;\n  roomFoodsList: RoomFood[] = [];\n  basicId: number;\n  basicRoomId: number;\n  basicRoomIdNum: number;\n  username: string;\n\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: this.cookieService.get('auth'),\n    }),\n  };\n\n  constructor(\n    private http: HttpClient,\n    private formBuilder: FormBuilder,\n    private cookieService: CookieService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private sharedService: SharedService\n  ) { }\n\n  ngOnInit(): void {\n\n    this.http\n      .get<boolean>(\n        'https://techhotel-edge.herokuapp.com/users/login',\n        this.httpOptions\n      )\n      .subscribe((resp) => {\n        if (!resp) {\n          this.router.navigate(['/login'], { relativeTo: this.route });\n        }\n      });\n\n    this.username = this.cookieService.get('username');\n\n    this.http.get<boolean>('https://techhotel-edge.herokuapp.com/users/is-admin',\n    this.httpOptions).subscribe((bool) => (this.isAdmin = bool));\n\n    this.http\n        .get<RoomFood[]>(\n          'https://techhotel-edge.herokuapp.com/activities/room-food-services',\n          this.httpOptions\n        )\n        .subscribe((roomFood) => {\n          this.roomFoodsList = roomFood; console.log(roomFood);\n        });\n    if(!this.isAdmin){\n      this.http\n        .get<any>(\n          'https://techhotel-edge.herokuapp.com/users/basics-username/' + this.username,\n          this.httpOptions\n        )\n        .subscribe((id) => {\n          this.basicId = id; console.log(this.basicId); console.log(\"number\"),\n          this.http.get<any[]>(\n            'https://techhotel-edge.herokuapp.com/activities/room-foods-service/filter/' + this.basicId,\n            this.httpOptions\n          )\n          .subscribe((roomFood) => {\n            this.roomFoodsList = roomFood; console.log(roomFood);\n          });\n\n          this.http.get<any>(\n            'https://techhotel-edge.herokuapp.com/users/basics/' + this.basicId, this.httpOptions\n          ).subscribe((roomId) => { this.basicRoomId = roomId; this.basicRoomIdNum = parseInt(JSON.stringify(this.basicRoomId[\"roomId\"]));\n          console.log(\"This Basic Id \" + this.basicId)});\n        });\n    }\n  }\n\n  submitForm() {\n    this.http\n      .post<RoomFood>(\n        'https://techhotel-edge.herokuapp.com/activities/room-food-services',\n        this.todoForm.value,\n        this.httpOptions\n      )\n      .subscribe((roomFood) => {\n        this.roomFoodsList = [...this.roomFoodsList, roomFood];\n      });\n    this.todoForm.reset();\n  }\n\n\n  updateList(){\n    this.http.get<RoomFood[]>('https://techhotel-edge.herokuapp.com/activities/room-food-services', this.httpOptions).subscribe(roomFood => {\n      this.roomFoodsList = [...roomFood];\n    }, () => console.log(\"updateList\"));\n  }\n\n}\n","<app-navbar></app-navbar>\n<div class=\"Room Foods content\">\n  <div class=\"center\">\n    <h1 class=\"center-h1\">ROOM FOOD SERVICES</h1>\n  </div>\n\n  <div class=\"description\">\n    <mat-card\n      style=\"\n        margin: 0 -10rem;\n        text-align: center;\n        padding-top: 30px;\n        padding-bottom: 30px;\n        font-size: 20px;\n        font-family: description;\n      \">\n    Ask for a room food service with our amazing foods all listed bellow.\n    </mat-card>\n  </div>\n\n   <div class=\"create-room-food\">\n    <app-room-food-appointment *ngIf=\"!isAdmin\" (roomFoodEmiter)=\"updateList()\" [basicRoomIdNum]=\"basicRoomIdNum\" [basicId]=\"basicId\"></app-room-food-appointment>\n  </div>\n\n  \n  <div class=\"child-table\">\n  <app-room-food-list [roomFoodsList]=\"roomFoodsList\"></app-room-food-list>\n  </div>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Room } from '../models/room.model';\n\n@Component({\n  selector: 'app-rooms-list',\n  templateUrl: './rooms-list.component.html',\n  styleUrls: ['./rooms-list.component.css']\n})\nexport class RoomsListComponent implements OnInit {\n\n  @Output() roomEmiter: EventEmitter<Room> = new EventEmitter<Room>();\n\n  @Input()\n  regularRoomList: Room[] = [];\n\n  @Input()\n  suiteRoomList: Room[] = [];\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: this.cookieService.get('auth')\n    }),\n  };\n\n  displayedColumns: string[] = [\n    'roomId',\n    'numberOfBeds',\n    'hairDryer',\n    'bathTub',\n    'price',\n    'roomType',\n    'available',\n  ];\n\n  constructor(\n    private http: HttpClient,\n    private formBuilder: FormBuilder,\n    private cookieService: CookieService,\n    private router: Router,\n    private route: ActivatedRoute,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"create-title\">REGULAR ROOMS</div>\n<table\n  *ngIf=\"regularRoomList.length >= 1\"\n  mat-table\n  [dataSource]=\"regularRoomList\"\n  matSort\n  class=\"mat-elevation-z8\"\n>\n  <ng-container matColumnDef=\"roomId\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>ROOM ID.</th>\n    <td mat-cell *matCellDef=\"let regularRoom\">{{ regularRoom.roomId }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"numberOfBeds\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>NUM OF BEDS</th>\n    <td mat-cell *matCellDef=\"let regularRoom\">{{ regularRoom.numberOfBeds }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"hairDryer\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>HAIR DRYER</th>\n    <td mat-cell *matCellDef=\"let regularRoom\">{{ regularRoom.hairDryer }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"bathTub\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>BATH TUB</th>\n    <td mat-cell *matCellDef=\"let regularRoom\">{{ regularRoom.bathTub }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"price\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>PRICE ($)</th>\n    <td mat-cell *matCellDef=\"let regularRoom\">{{ regularRoom.price }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"roomType\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>ROOM TYPE</th>\n    <td mat-cell *matCellDef=\"let regularRoom\">{{ regularRoom.roomType }}</td>\n  </ng-container>\n  <ng-container matColumnDef=\"available\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>AVAILABLE</th>\n    <td mat-cell *matCellDef=\"let regularRoom\">{{ regularRoom.available }}</td>\n  </ng-container>\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n</table>\n\n<div class=\"create-title\">SUITE ROOMS</div>\n<table\n  *ngIf=\"suiteRoomList.length >= 1\"\n  mat-table\n  [dataSource]=\"suiteRoomList\"\n  matSort\n  class=\"mat-elevation-z8\"\n>\n<ng-container matColumnDef=\"roomId\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>ROOM ID.</th>\n    <td mat-cell *matCellDef=\"let suiteRoom\">{{ suiteRoom.roomId }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"numberOfBeds\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>NUM OF BEDS</th>\n    <td mat-cell *matCellDef=\"let suiteRoom\">{{ suiteRoom.numberOfBeds }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"hairDryer\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>HAIR DRYER</th>\n    <td mat-cell *matCellDef=\"let suiteRoom\">{{ suiteRoom.hairDryer }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"bathTub\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>BATH TUB</th>\n    <td mat-cell *matCellDef=\"let suiteRoom\">{{ suiteRoom.bathTub }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"price\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>PRICE ($)</th>\n    <td mat-cell *matCellDef=\"let suiteRoom\">{{ suiteRoom.price }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"roomType\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>ROOM TYPE</th>\n    <td mat-cell *matCellDef=\"let suiteRoom\">{{ suiteRoom.roomType }}</td>\n  </ng-container>\n  <ng-container matColumnDef=\"available\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>AVAILABLE</th>\n    <td mat-cell *matCellDef=\"let suiteRoom\">{{ suiteRoom.available }}</td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n</table>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { SharedService } from '../models/shared.service';\nimport { Room } from '../models/room.model';\n\n@Component({\n  selector: 'app-rooms-view',\n  templateUrl: './rooms-view.component.html',\n  styleUrls: ['./rooms-view.component.css']\n})\nexport class RoomsViewComponent implements OnInit {\n\n  regularRoomList: Room[] = [];\n  suiteRoomList: Room[] = [];\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: this.cookieService.get('auth'),\n    }),\n  };\n\n  constructor(\n    private http: HttpClient,\n    private formBuilder: FormBuilder,\n    private cookieService: CookieService,\n    private router: Router,\n    private route: ActivatedRoute,\n  ) { }\n\n  ngOnInit(): void {\n    this.http\n    .get<boolean>(\n      'https://techhotel-edge.herokuapp.com/users/login',\n      this.httpOptions\n    )\n    .subscribe((resp) => {\n      if (!resp) {\n        this.router.navigate(['/login'], { relativeTo: this.route });\n      }\n    });\n\n    this.http.get<boolean>('https://techhotel-edge.herokuapp.com/users/is-admin',\n    this.httpOptions).subscribe((bool) => {\n      if (!bool) {\n        this.router.navigate(['/home'], { relativeTo: this.route });\n      }\n    });\n\n    this.http\n    .get<Room[]>(\n      'https://techhotel-edge.herokuapp.com/regular-rooms',\n      this.httpOptions\n    )\n    .subscribe((regularRoom) => {\n      this.regularRoomList = regularRoom; console.log(regularRoom);\n\n      this.http\n    .get<Room[]>(\n      'https://techhotel-edge.herokuapp.com/suites',\n      this.httpOptions\n    )\n    .subscribe((suiteRoom) => {\n      this.suiteRoomList = suiteRoom; console.log(suiteRoom);\n    });\n    });\n  }\n\n}\n","<app-navbar></app-navbar>\n<div class=\"Room Foods content\">\n  <div class=\"center\">\n    <h1 class=\"center-h1\">HOTEL ROOMS</h1>\n  </div>\n\n  <div class=\"description\">\n    <mat-card\n      style=\"\n        margin: 0 -10rem;\n        text-align: center;\n        padding-top: 30px;\n        padding-bottom: 30px;\n        font-size: 20px;\n        font-family: description;\n      \">\n    Only available for Admins: See all hotel rooms and its details\n    </mat-card>\n  </div>\n\n  <div class=\"child-table\">\n    <app-rooms-list [regularRoomList]=\"regularRoomList\" [suiteRoomList]=\"suiteRoomList\"></app-rooms-list>\n</div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Invoice } from '../models/invoice.model';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-users-invoices-list',\n  templateUrl: './users-invoices-list.component.html',\n  styleUrls: ['./users-invoices-list.component.css']\n})\nexport class UsersInvoicesListComponent implements OnInit {\n  @Input()\n  invoiceList: Invoice[] = [];\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: this.cookieService.get('auth')\n    }),\n  };\n\n  displayedColumns: string[] = [\n    'invoiceId',\n    'userId',\n    'name',\n    'roomId',\n    'invoiceType',\n    'priceOwed',\n  ];\n  constructor(\n    private cookieService: CookieService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<table\n  *ngIf=\"invoiceList.length >= 1\"\n  mat-table\n  [dataSource]=\"invoiceList\"\n  matSort\n  class=\"mat-elevation-z8\"\n>\n  <ng-container matColumnDef=\"invoiceId\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> INVOICE ID.</th>\n    <td mat-cell *matCellDef=\"let invoice\">{{ invoice.invoiceId }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"userId\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>USER ID</th>\n    <td mat-cell *matCellDef=\"let invoice\">{{ invoice.userId }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>USER NAME</th>\n    <td mat-cell *matCellDef=\"let invoice\">{{ invoice.name }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"roomId\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>ROOM ID.</th>\n    <td mat-cell *matCellDef=\"let invoice\">{{ invoice.roomId }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"invoiceType\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>INVOICE TYPE</th>\n    <td mat-cell *matCellDef=\"let invoice\">{{ invoice.invoiceType }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"priceOwed\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>AMOUNT PAYED ($)</th>\n    <td mat-cell *matCellDef=\"let invoice\">{{ invoice.priceOwed }}</td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n</table>\n\n<table\n  *ngIf=\"invoiceList.length == 0\"\n  mat-table\n  [dataSource]=\"invoiceList\"\n  matSort\n  class=\"mat-elevation-z8\"\n>\n<ng-container matColumnDef=\"invoiceId\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> INVOICE ID.</th>\n    <td mat-cell *matCellDef=\"let invoice\">{{ invoice.invoiceId }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"userId\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>USER ID</th>\n    <td mat-cell *matCellDef=\"let invoice\">{{ invoice.userId }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>USER NAME</th>\n    <td mat-cell *matCellDef=\"let invoice\">{{ invoice.name }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"roomId\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>ROOM ID.</th>\n    <td mat-cell *matCellDef=\"let invoice\">{{ invoice.roomId }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"invoiceType\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>INVOICE TYPE</th>\n    <td mat-cell *matCellDef=\"let invoice\">{{ invoice.invoiceType }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"priceOwed\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>AMOUNT PAYED ($)</th>\n    <td mat-cell *matCellDef=\"let invoice\">{{ invoice.priceOwed }}</td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { Invoice } from '../models/invoice.model';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { User } from '../models/user.model';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-users-invoices-view',\n  templateUrl: './users-invoices-view.component.html',\n  styleUrls: ['./users-invoices-view.component.css']\n})\nexport class UsersInvoicesViewComponent implements OnInit {\n  users: User[] = [];\n  isAdmin=false;\n\n  todoForm: FormGroup;\n  invoiceList: Invoice[] = [];\n  username: string;\n  basicId: number;\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: this.cookieService.get('auth'),\n    }),\n  };\n\n  constructor(\n    private http: HttpClient,\n    private formBuilder: FormBuilder,\n    private cookieService: CookieService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.http\n    .get<boolean>(\n      'https://techhotel-edge.herokuapp.com/users/login',\n      this.httpOptions\n    )\n    .subscribe((resp) => {\n      if (!resp) {\n        this.router.navigate(['/login'], { relativeTo: this.route });\n      }\n    });\n\n    this.username = this.cookieService.get('username');\n\n    this.http.get<boolean>('https://techhotel-edge.herokuapp.com/users/is-admin',\n    this.httpOptions).subscribe((bool) => {\n      if (bool) {\n        this.router.navigate(['/home'], { relativeTo: this.route });\n      }\n    });\n    if(!this.isAdmin){\n      this.http\n        .get<any>(\n          'https://techhotel-edge.herokuapp.com/users/basics-username/' + this.username,\n          this.httpOptions\n        )\n        .subscribe((id) => {\n          this.basicId = id; console.log(this.basicId); console.log(\"number\"),\n          this.http.get<any[]>(\n            'https://techhotel-edge.herokuapp.com/invoices/' + this.basicId,\n            this.httpOptions\n          )\n          .subscribe((invoiceByUser) => {\n            this.invoiceList = invoiceByUser; console.log(invoiceByUser);\n          });\n        });\n    }\n    \n  }\n\n}\n","<app-navbar></app-navbar>\n<div class=\"user-invoices content\">\n  <div class=\"center\">\n    <h1 class=\"center-h1\">Invoices</h1>\n  </div>\n\n  <div class=\"description\">\n    <mat-card\n      style=\"\n        margin: 0 -10rem;\n        text-align: center;\n        padding-top: 30px;\n        padding-bottom: 30px;\n        font-size: 20px;\n        font-family: description;\">\n    All your <b>invoices</b> in Tech Hotel are displayed down bellow.\n    </mat-card>\n  </div>\n  \n  <div class=\"child-table\">\n  <app-invoice-list [invoiceList]=\"invoiceList\"></app-invoice-list>\n  </div>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { UserClient } from '../models/user-client.model';\n\n@Component({\n  selector: 'app-users-list',\n  templateUrl: './users-list.component.html',\n  styleUrls: ['./users-list.component.css']\n})\nexport class UsersListComponent implements OnInit {\n\n  @Output() userEmiter: EventEmitter<UserClient> = new EventEmitter<UserClient>();\n\n  @Input()\n  basicUserList: UserClient[] = [];\n\n  @Input()\n  premiumUserList: UserClient[] = [];\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: this.cookieService.get('auth')\n    }),\n  };\n\n  displayedColumns: string[] = [\n    'id',\n    'name',\n    'username',\n    'typeOfUser',\n    'country',\n    'city',\n    'registrationDate',\n    'roomId',\n    'delete',\n  ];\n\n\n  constructor(\n    private http: HttpClient,\n    private formBuilder: FormBuilder,\n    private cookieService: CookieService,\n    private router: Router,\n    private route: ActivatedRoute,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  deleteBasic(id){\n    this.http.delete<UserClient>('https://techhotel-edge.herokuapp.com/users/basics/' + id, this.httpOptions)\n    .subscribe((basicUser) => {this.basicUserList = [...this.basicUserList, basicUser]; });\n  }\n\n  deletePremium(id){\n    this.http.delete<UserClient>('https://techhotel-edge.herokuapp.com/users/premiums/' + id, this.httpOptions)\n    .subscribe((premiumUser) => {this.premiumUserList = [...this.premiumUserList, premiumUser]; });\n  }\n\n}\n","<div class=\"create-title\">BASIC USERS</div>\n<table\n  *ngIf=\"basicUserList.length >= 1\"\n  mat-table\n  [dataSource]=\"basicUserList\"\n  matSort\n  class=\"mat-elevation-z8\"\n>\n  <ng-container matColumnDef=\"id\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>USER ID.</th>\n    <td mat-cell *matCellDef=\"let basicUser\">{{ basicUser.id }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>NAME</th>\n    <td mat-cell *matCellDef=\"let basicUser\">{{ basicUser.name }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"username\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>USERNAME</th>\n    <td mat-cell *matCellDef=\"let basicUser\">{{ basicUser.username }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"typeOfUser\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>TYPE OF USER</th>\n    <td mat-cell *matCellDef=\"let basicUser\">{{ basicUser.typeOfUser }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"country\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>COUNTRY</th>\n    <td mat-cell *matCellDef=\"let basicUser\">{{ basicUser.address['country'] }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"city\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>CITY</th>\n    <td mat-cell *matCellDef=\"let basicUser\">{{ basicUser.address['city'] }}</td>\n  </ng-container>\n  <ng-container matColumnDef=\"registrationDate\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>REGISTRATION DATE</th>\n    <td mat-cell *matCellDef=\"let basicUser\">{{ basicUser.registrationDate }}</td>\n  </ng-container>\n  <ng-container matColumnDef=\"roomId\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>ROOM ID.</th>\n    <td mat-cell *matCellDef=\"let basicUser\">{{ basicUser.roomId }}</td>\n  </ng-container>\n  <ng-container matColumnDef=\"delete\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>BLOCK USER</th>\n    <td mat-cell *matCellDef=\"let basicUser\"><button\n      (click)=\"deleteBasic(basicUser.id)\"\n      mat-raised-button\n      color=\"primary\"\n      class=\"create-raised\">Block</button></td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n</table>\n\n<table\n  *ngIf=\"basicUserList.length == 0\"\n  mat-table\n  [dataSource]=\"basicUserList\"\n  matSort\n  class=\"mat-elevation-z8\"\n>  \n<ng-container matColumnDef=\"id\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>USER ID.</th>\n  </ng-container>\n\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>NAME</th>\n  </ng-container>\n\n  <ng-container matColumnDef=\"username\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>USERNAME</th>\n  </ng-container>\n\n  <ng-container matColumnDef=\"typeOfUser\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>TYPE OF USER</th>\n  </ng-container>\n\n  <ng-container matColumnDef=\"country\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>COUNTRY</th>\n  </ng-container>\n\n  <ng-container matColumnDef=\"city\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>CITY</th>\n  </ng-container>\n  <ng-container matColumnDef=\"registrationDate\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>REGISTRATION DATE</th>\n  </ng-container>\n  <ng-container matColumnDef=\"roomId\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>ROOM ID.</th>\n  </ng-container>\n  <ng-container matColumnDef=\"delete\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>BLOCK USER</th>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n</table>\n\n\n<div class=\"create-title\">PREMIUM USERS</div>\n<table\n  *ngIf=\"premiumUserList.length >= 1\"\n  mat-table\n  [dataSource]=\"premiumUserList\"\n  matSort\n  class=\"mat-elevation-z8\"\n>\n  <ng-container matColumnDef=\"id\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>USER ID.</th>\n    <td mat-cell *matCellDef=\"let premiumUser\">{{ premiumUser.id }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>NAME</th>\n    <td mat-cell *matCellDef=\"let premiumUser\">{{ premiumUser.name }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"username\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>USERNAME</th>\n    <td mat-cell *matCellDef=\"let premiumUser\">{{ premiumUser.username }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"typeOfUser\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>TYPE OF USER</th>\n    <td mat-cell *matCellDef=\"let premiumUser\">{{ premiumUser.typeOfUser }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"country\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>COUNTRY</th>\n    <td mat-cell *matCellDef=\"let premiumUser\">{{ premiumUser.address['country'] }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"city\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>CITY</th>\n    <td mat-cell *matCellDef=\"let premiumUser\">{{ premiumUser.address['city'] }}</td>\n  </ng-container>\n  <ng-container matColumnDef=\"registrationDate\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>REGISTRATION DATE</th>\n    <td mat-cell *matCellDef=\"let premiumUser\">{{ premiumUser.registrationDate }}</td>\n  </ng-container>\n  <ng-container matColumnDef=\"roomId\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>ROOM ID.</th>\n    <td mat-cell *matCellDef=\"let premiumUser\">{{ premiumUser.roomId }}</td>\n  </ng-container>\n  <ng-container matColumnDef=\"delete\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>BLOCK USER</th>\n    <td mat-cell *matCellDef=\"let premiumUser\"><button\n      (click)=\"deletePremium(premiumUser.id)\"\n      mat-raised-button\n      color=\"primary\"\n      class=\"create-raised\">Block</button>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n</table>\n\n<table\n  *ngIf=\"premiumUserList.length == 0\"\n  mat-table\n  [dataSource]=\"premiumUserList\"\n  matSort\n  class=\"mat-elevation-z8\"\n>\n<ng-container matColumnDef=\"id\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>USER ID.</th>\n  </ng-container>\n\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>NAME</th>\n  </ng-container>\n\n  <ng-container matColumnDef=\"username\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>USERNAME</th>\n  </ng-container>\n\n  <ng-container matColumnDef=\"typeOfUser\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>TYPE OF USER</th>\n  </ng-container>\n\n  <ng-container matColumnDef=\"country\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>COUNTRY</th>\n  </ng-container>\n\n  <ng-container matColumnDef=\"city\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>CITY</th>\n  </ng-container>\n  <ng-container matColumnDef=\"registrationDate\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>REGISTRATION DATE</th>\n  </ng-container>\n  <ng-container matColumnDef=\"roomId\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>ROOM ID.</th>\n  </ng-container>\n  <ng-container matColumnDef=\"delete\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>BLOCK USER</th>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n</table>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { SharedService } from '../models/shared.service';\nimport { UserClient } from '../models/user-client.model';\n\n\n@Component({\n  selector: 'app-users-view',\n  templateUrl: './users-view.component.html',\n  styleUrls: ['./users-view.component.css']\n})\nexport class UsersViewComponent implements OnInit {\n\n  basicUserList: UserClient[] = [];\n  premiumUserList: UserClient[] = [];\n\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: this.cookieService.get('auth'),\n    }),\n  };\n\n\n  constructor(\n    private http: HttpClient,\n    private formBuilder: FormBuilder,\n    private cookieService: CookieService,\n    private router: Router,\n    private route: ActivatedRoute,\n  ) { }\n\n  ngOnInit(): void {\n    this.http\n    .get<boolean>(\n      'https://techhotel-edge.herokuapp.com/users/login',\n      this.httpOptions\n    )\n    .subscribe((resp) => {\n      if (!resp) {\n        this.router.navigate(['/login'], { relativeTo: this.route });\n      }\n    });\n\n    this.http.get<boolean>('https://techhotel-edge.herokuapp.com/users/is-admin',\n    this.httpOptions).subscribe((bool) => {\n      if (!bool) {\n        this.router.navigate(['/home'], { relativeTo: this.route });\n      }\n    });\n\n    this.http\n    .get<UserClient[]>(\n      'https://techhotel-edge.herokuapp.com/users/basics',\n      this.httpOptions\n    )\n    .subscribe((basicUser) => {\n      this.basicUserList = basicUser; console.log(basicUser);\n\n      this.http\n    .get<UserClient[]>(\n      'https://techhotel-edge.herokuapp.com/users/premiums',\n      this.httpOptions\n    )\n    .subscribe((premiumUser) => {\n      this.premiumUserList = premiumUser; console.log(premiumUser);\n    });\n    });\n  }\n\n  updateList(){\n    this.http.get<UserClient[]>('https://techhotel-edge.herokuapp.com/users/basics', this.httpOptions).subscribe(basicUser => {\n      this.basicUserList = [...basicUser];\n    }, () => console.log(\"updateList\"));\n\n    this.http.get<UserClient[]>('https://techhotel-edge.herokuapp.com/users/premiums', this.httpOptions).subscribe(premiumUser => {\n      this.premiumUserList = [...premiumUser];\n    }, () => console.log(\"updateList\"));\n  }\n\n}\n","<app-navbar></app-navbar>\n<div class=\"Room Foods content\">\n  <div class=\"center\">\n    <h1 class=\"center-h1\">SUBSCRIBED USERS</h1>\n  </div>\n\n  <div class=\"description\">\n    <mat-card\n      style=\"\n        margin: 0 -10rem;\n        text-align: center;\n        padding-top: 30px;\n        padding-bottom: 30px;\n        font-size: 20px;\n        font-family: description;\n      \">\n    Only available for Admins: See all subscribed users personal information\n    </mat-card>\n  </div>\n\n  <div class=\"child-table\">\n    <app-users-list (userEmiter)=\"updateList()\" [basicUserList]=\"basicUserList\" [premiumUserList]=\"premiumUserList\"></app-users-list>\n</div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}